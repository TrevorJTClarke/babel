{"version":3,"sources":["dist/bab.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCM,KAAK;;;;;;;;AAOC,UAPN,KAAK,GAOa;MAAX,GAAG,gCAAG,IAAI;;wBAPjB,KAAK;;AAQT,MAAI,CAAC,QAAQ,GAAG,GAAG,CAAA;AACnB,SAAO,IAAI,CAAA;EACX;;cAVI,KAAK;;;;;;SAeN,gBAAE;AACL,UAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;GAC5C;;;;;;;SAKI,iBAAE;AACN,UAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;AAC3C,OAAI,CAAC,IAAI,EAAE,CAAA;GACX;;;;;;;SAKI,iBAAE;AACN,UAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;GAC1C;;;;;;;SAKK,kBAAE;AACP,UAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;GAC3C;;;QAvCI,KAAK","file":"dist/bab.js","sourcesContent":["// /* ES6 Feature tests */\n// // console.log(\"HEllo!\")\n\n// var nwFn = (f => {\n// \t// console.log(\"F:\", f)\n// })\n\n// nwFn(\"this is nwFn!\")\n\n// var evens = [2,4,6,8,10,12,14,16,18,20]\n// var nums = evens.map((v, i) => v + i)\n// var fives = []\n\n// // Statement bodies\n// nums.forEach(v => {\n// \tif (v % 5 === 0)\n//     \tfives.push(v)\n//     \tnwFn(v)\n// });\n// console.log(fives)\n// var s = new Set();\n// s.add(\"hello\") // Strings\n//  .add({\"data\": \"hiii data\"}) // Objects\n//  .add([\"First\", \"Second\"])\n// // s.add(\"hello\").add(\"goodbye\").add(\"hello\").add({\"data\": \"hiii data\"})\n// s.size === 2;\n// s.has(\"hello\") === true;\n// console.log(s.size)\n// // console.log(s)\n// // console.log(s.has(\"hello\"))\n// // console.log(s.keys())\n// // console.log(s.entries())\n// // console.log(s.delete(\"hello\"))\n// // console.log(s.has(\"hello\"))\n/* ES6 Timer */\nclass Timer {\n\n\t/**\n\t * Build the base of Timer\n\t * @param  {String}:  dur\": duration in milliseconds\n\t * @return {[type]}          an instance of the Timer\n\t */\n\tconstructor(dur = 1000){\n\t\tthis.duration = dur\n\t\treturn this\n\t}\n\n\t/**\n\t * decrements the count, based off duration\n\t */\n\ttick(){\n\t\tconsole.log(\"timer tick:\", this.options.dur)\n\t}\n\n\t/**\n\t * waits until this method is called, then starts the timer/template loop\n\t */\n\tstart(){\n\t\tconsole.log(\"timer started:\", this.options)\n\t\tthis.tick()\n\t}\n\n\t/**\n\t * stops the current timer/template loop\n\t */\n\tpause(){\n\t\tconsole.log(\"timer paused:\", this.options)\n\t}\n\n\t/**\n\t * stops the current timer/template loop\n\t */\n\tresume(){\n\t\tconsole.log(\"timer resumed:\", this.options)\n\t}\n}\n\n// USE:\n// let options = new Map()\n// \toptions.set(\"dur\", 1000)\n\n// var _t = new Timer(options)\n\n// console.log(\"timer instance:\", _t)\n// _t.start();"]}