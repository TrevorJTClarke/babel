{"version":3,"sources":["dist/bab.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCa,KAAK;;;;;;;;AAON,UAPC,KAAK,GAOJ;mBAGF,YAAY;;wBAVX,KAAK;;;AAUhB,WAAU,YAAY,CAAC,KAAK;OACvB,GAAG;;;;AAAH,SAAG,GAAG,KAAK;;;YACT,GAAG,GAAG,CAAC,CAAA;;;;;;aACH,EAAE,GAAG;;;;;;;0CAER,GAAG;;;;;;;GACV;;;AAGD,MAAI,CAAC,IAAI,GAAG,YAAY,CAAA;;AAExB,SAAO,IAAI,CAAA;EACX;;cAtBW,KAAK;;;;;;;SA4Bb,cAAE,GAAG,EAAE;AACV,OAAI,KAAK,GAAG,IAAI;OAAE,KAAK;OAAE,IAAI;OAAE,KAAK;OAAE,IAAI;OAAE,GAAG,CAAC;AAChD,OAAI,QAAQ,GAAI,AAAC,CAAC,IAAI,IAAI,EAAA,GAAI,IAAI,IAAI,EAAE,GAAG,GAAG,CAAA,AAAC,GAAG,GAAG,AAAC,CAAA;AACtD,OAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAE,KAAK,CAAC,OAAO,CAAE,CAAA;;;;;;;;;;;;AAYnD,YAAS,MAAM,CAAC,CAAC,EAAC;AACd,WAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC;;AAED,YAAS,IAAI,GAAI;AAChB,SAAK,GAAG,QAAQ,GAAI,CAAC,IAAI,IAAI,EAAA,AAAC,CAAA;AAC9B,SAAK,CAAC,WAAW,GAAG,KAAK,CAAA;AACxB,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;;AAEnB,QAAK,KAAK,GAAG,IAAI,EAAG;AACnB,YAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;;AAEnB,YAAM;KACN,MAAM;AACH,QAAG,GAAG,IAAI,IAAI,CAAE,KAAK,CAAE,CAAA;AACvB,UAAK,GAAG,GAAG,CAAC,WAAW,EAAE,CAAA;AACzB,SAAI,GAAG,GAAG,CAAC,aAAa,EAAE,CAAA;;AAE1B,SAAI,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,CAAE,IAAI,CAAE,GAAG,IAAI,CAAA,GAAI,GAAG,GAAG,MAAM,CAAE,GAAG,CAAC,aAAa,EAAE,CAAE,CAAA;;AAEpG,UAAK,CAAC,KAAK,GAAG,UAAU,CAAE,IAAI,EAAE,GAAG,CAAC,kBAAkB,EAAE,GAAG,GAAG,CAAE,CAAC;KACpE;IACD;;;AAGD,OAAI,EAAE,CAAA;GACN;;;;;;;SAKI,eAAC,IAAI,EAAW;OAAT,GAAG,gCAAG,EAAE;;AACnB,UAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAA;AAClC,OAAI,CAAC,OAAO,GAAG,IAAI,CAAA;AACnB,OAAI,CAAC,IAAI,CAAE,GAAG,CAAE,CAAA;GAChB;;;;;;;SAKI,iBAAE;AACN,OAAI,KAAK,GAAG,IAAI,CAAA;AAChB,SAAM,CAAC,YAAY,CAAE,KAAK,CAAC,KAAK,CAAE,CAAA;AAClC,UAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;GAC3B;;;;;;;SAKK,kBAAE;AACP,OAAI,KAAK,GAAG,IAAI,CAAA;AAChB,OAAI,GAAG,GAAG,IAAI,IAAI,CAAE,KAAK,CAAC,WAAW,CAAE,CAAA;AACvC,OAAI,CAAC,IAAI,CAAE,GAAG,CAAC,aAAa,EAAE,CAAE,CAAA;AAChC,UAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;GAC5B;;;QAjGW,KAAK;;;QAAL,KAAK,GAAL,KAAK","file":"dist/bab.js","sourcesContent":["// /* ES6 Feature tests */\n// // console.log(\"HEllo!\")\n\n// var nwFn = (f => {\n// \t// console.log(\"F:\", f)\n// })\n\n// nwFn(\"this is nwFn!\")\n\n// var evens = [2,4,6,8,10,12,14,16,18,20]\n// var nums = evens.map((v, i) => v + i)\n// var fives = []\n\n// // Statement bodies\n// nums.forEach(v => {\n// \tif (v % 5 === 0)\n//     \tfives.push(v)\n//     \tnwFn(v)\n// });\n// console.log(fives)\n// var s = new Set();\n// s.add(\"hello\") // Strings\n//  .add({\"data\": \"hiii data\"}) // Objects\n//  .add([\"First\", \"Second\"])\n// // s.add(\"hello\").add(\"goodbye\").add(\"hello\").add({\"data\": \"hiii data\"})\n// s.size === 2;\n// s.has(\"hello\") === true;\n// console.log(s.size)\n// // console.log(s)\n// // console.log(s.has(\"hello\"))\n// // console.log(s.keys())\n// // console.log(s.entries())\n// // console.log(s.delete(\"hello\"))\n// // console.log(s.has(\"hello\"))\n/* ES6 Timer */\nexport class Timer {\n\n\t/**\n\t * Build the base of Timer\n\t * @param  {String}:  dur: duration in milliseconds\n\t * returns the function instance\n\t */\n\tconstructor(){\n\n\t\t// setup the generator\n\t\tfunction *timeIterator(total) {\n\t\t\tvar cur = total\n\t\t\twhile(cur > 1)\n\t\t\t    yield --cur\n\t\t\t\n\t\t\treturn cur\n\t\t}\n\n\t\t// assign the iterator to class\n\t\tthis.step = timeIterator\n\n\t\treturn this\n\t}\n\n\t/**\n\t * decrements the count, based off duration\n\t * returns a generator instance\n\t */\n\ttick( dur ){\n\t\tvar _self = this, hours, mins, milli, time, tik;\n\t\tvar duration = ((+new Date) + 1000 * (60 * dur) + 500)\n\t\tvar elem = document.getElementById( _self.element )\n\t\t// var stepper = this.step(1000)\n\t\t// console.log(stepper)\n\n\t\t// var timer = setInterval(function(){\n\t\t// \tconsole.log(stepper.next())\n\t\t// },1000)\n\n\t\t// setTimeout(function(){\n\t\t// \twindow.clearTimeout(timer)\n\t\t// },30000)\n\n\t\tfunction format(t){\n\t\t    return (t <= 9 ? \"0\" + t : t)\n\t\t}\n\n\t\tfunction tock () {\n\t\t\tmilli = duration - (+new Date)\n\t\t\t_self.currentTime = milli\n\t\t\t\tconsole.log(milli)\n\n\t\t\tif ( milli < 1000 ) {\n\t\t\t\tconsole.log(\"DONE\")\n\t\t\t    // _self.end()\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t    tik = new Date( milli )\n\t\t\t    hours = tik.getUTCHours()\n\t\t\t    mins = tik.getUTCMinutes()\n\t\t\t    \n\t\t\t    elem.innerHTML = (hours ? hours + ':' + format( mins ) : mins) + ':' + format( tik.getUTCSeconds() )\n\t\t\t    \n\t\t\t    _self.timer = setTimeout( tock, tik.getUTCMilliseconds() + 500 );\n\t\t\t}\n\t\t}\n\n\t\t// check if pre-defined or not\n\t\ttock()\n\t}\n\n\t/**\n\t * waits until this method is called, then starts the timer/template loop\n\t */\n\tstart(elem, dur = 30){\n\t\tconsole.log(\"timer started:\", dur)\n\t\tthis.element = elem\n\t\tthis.tick( dur )\n\t}\n\n\t/**\n\t * stops the current timer/template loop\n\t */\n\tpause(){\n\t\tvar _self = this\n\t\twindow.clearTimeout( _self.timer )\n\t\tconsole.log(\"timer paused\")\n\t}\n\n\t/**\n\t * stops the current timer/template loop\n\t */\n\tresume(){\n\t\tvar _self = this\n\t\tvar dur = new Date( _self.currentTime )\n\t\tthis.tick( dur.getUTCMinutes() )\n\t\tconsole.log(\"timer resumed\")\n\t}\n}"]}